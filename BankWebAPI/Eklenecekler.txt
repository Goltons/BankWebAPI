cart türüne göre limit belirleme başlangıç 1000tl
şube kodları için json dosyası oluşturmak oradan seçtirmek js tarafında
doğrulama
hesap limit sınırı ve kart sınırı koyulması belli bir adetin üzerinde oluşturulmayıp hata verilmes eğer kredi borcu varsa ödenmeden yeni kredi verilmemesi kodlarının yazılmaıs 
interest rate tablosu banka çalışanları ve müşteri hizmetleri için
transactionları dosyaya yazma loglama
rabbitmq,websocket,redis,log ekstra:elastic docker kullanımı
sessionstorage da tc ile veri çekilip halledilmesi işlemlerinin halledilmesi id gibi kullanılması 
staj 6.gün servis kodlarının yazılması ve api için controller sınıflarının oluşturulup kodlarının yazılması 
staj 7.gün react kullanarak kayıt sayfa tasarımlarının oluşturulması ve backend e veri gönderme ve alma kodlarının yazılması componentlerin oluşturulması 
staj 8.gün giriş sayfa tasarımı oluşturulması ve giriş için gerekli method ve fonksiyonların olıuşturulup api ile veritabanından veri alıp doğrulayıp bunları tekrar dönen ve kullanıcı girişini sağlayan methodların oluşturulup yazılması ve react ile tasarımının yapılıp kullanıcı girişinin sağlanması 
staj 9.gün c# tarafında kredi çekme ödeme metodlarının tarafında  yazılması  api ile ödeme planı alınması ve ödeme yapılmasını sağlayan kodların yazılması.
staj 10.gün giriş kayıt react üzerindeki hataların giderilmesi tasarımın daha düzgün bir hale getirilmesi c# tarafında düzeltmeler yapılması veritabanında tablolara ek sutünlar eklenmesi bunların test edilmesi ek Controller classlarının oluşturulması ve bunların metodların yazılıp test edilmesi
staj 11.gün profil bilgilerinin olduğu sayfayı oluşturma ve bu bilgileri backend api ile veritabanından alıp react üzerinde axios methodunu kullanarak objeyi çağırıp bu obje içindeki bilgilerle profil sayfasındaki bilgilerin doldurulması ve bu işlenmi yaparken kullanıcı giriş işlemini yaptığında kullanıcının tcnosunu session storage a kaydedip bu kayıtlı tcno ile gerekli işlemleri yapmak tcno yu id gibi kullanmak ve gerekli işlemlerin yapılmasını sağlamak için bu yöntemi tercih ettim.
hata düzeltmeleri react tarafında login ve register için ve bazı metodlarda ufak değişiklikler yapılması register componentdınki kodların refactor edilmesi
staj 12.gün react tarafında kullanıcıya ait profil bilgilerinin içerdiği sayfanın oluşturulması bunun tasarımının yapılması ve hesap açma kodlarının c# tarafında yazılıp postman uygulaması ile veri gönderilip test edilmesi bunlar için gerekli methodların oluşturulması api tarafında doğrulama ile hesabın oluşturuluğ veritabanına kaydedilmesi react üzerinde tasarımının yapılması ve test edilmes bazı hata kodlarının düzeltilmesi react üzerinde hesap açma ve hesaplarını görüntüleme için gerekli componentların oluşturulması ve bunların tasarımının yapılması getaccountlist metodunun yazılıp bu method ile api üzerinden veritabanı sorgusu yapıp kullanıcıya kayıtlı olan accounları liste şeklinde geri döndürerek kullanıcıya gösterme
staj 13.gün hesap açma sayfasının tasarımın react tarafında yapılması ve kullanıcıya ait hesapların tablo halinde getirildiği component in oluşturulması ve bu component e gelecek veriler için c# tarafında gerekli kodların yazılması ve test edilmesi işlemleri yapılmıştır.ek olarak cart ve account tablolarında bazı değişkenlerin modellemedeik yeri ve veritabanında bazı sutunlar değiştirilmiştir.account controllerı oluşturulmuştur düzenli bir biçimde bütün get ve post işlemleri için
staj 14.gün kart başvurusu yapma ve bu başvuru için gerekli sayfanın tasarım ve client side kodları yazılmıştır api tarafında c# ile kart başvurusu yaparken sistemin üretmesi gereken değişkenleri ve bu üretilen değişkenlerin doğru olup olmadığının kontrolünün yapılıp veritabanına  kaydedilmesini sağlayana methode ve işlemler yapılmıştır card controller ı oluşturul bu controller önce postman ile daha sonra tasarımını yaptıktan sonra react ile veri gönderilp bu verinin doğru bi şekilde kaydedildiği test edilmiştir
staj 15.gün fatura ödeme componenti  ve kredi başvurusu yapma kredi ödeme planı componentleri yaptım.Fatura ödemesini seçilen kart üzerinden yapılan metodları yazdım.ödeme yapıldıktan sonra veritabanından kart ve fatura için güncellemeler yapacak şekilde kodlamaları yaptım.react de componentları oluşturdum ve bunlar için gerekli js html kodlarını yazdım.c# üzerinde gerekli metodları yazdım.
staj 16.gün /*transfer işlemleri için gerekli olan nesneyi ve repository service sınıflarını oluşturdum gönderme seçeneğine gönderim yapacak metodları yazdım.React üzerinde 2 tane component dosyasını oluşturdum iban ve hesap numarası ile transfer yapabilecek kodlamayı yaptım gerekli tasarımları yaptım ve veritabanında transfer tablosu üzerinde transferleri kaydeden  repository ve servis dosyalarını olıuşturdum ve bu sınıfları test etmek için önce postman uygulaması ile daha sonra react ile component oluşturarak denedim.
staj 17.gün miy banka çalışanı için gerekli metod ve sınıfları oluşturdum.navbar tasarımı
staj 18.gün miy banko onay işlem componentini yaparız ve ilk için gerekli tasarımları yaptım./*
staj 19.gün miy banka için tasarım/*
staj 20.gün projenin test
ek 2 gün var haftasonu hataları düzelt
profil update/kart detay update/şifre sıfırlama/route/kredi ödeme planı/kredi ödeme/miy class ve role based route
bugün navbar account ve kartta düzenlemeler kredi ödeme yazma+cardupdate page+bootstrap /*miy banko sınıfları ve componentleri